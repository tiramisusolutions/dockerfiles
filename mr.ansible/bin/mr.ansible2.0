#!/bin/bash
set -e

# Colors
ESC_SEQ="\x1b["
COL_RESET=$ESC_SEQ"39;49;00m"
COL_RED=$ESC_SEQ"31;01m"
COL_GREEN=$ESC_SEQ"32;01m"
COL_YELLOW=$ESC_SEQ"33;01m"
#COL_BLUE=$ESC_SEQ"34;01m"
#COL_MAGENTA=$ESC_SEQ"35;01m"
#COL_CYAN=$ESC_SEQ"36;01m"


## Functions we use
# Error

error_exit() {
	echo -en "$COL_RED$1$COL_RESET" 1>&2
	exit 1
}

# Usage: run for example *mr.anible-playbook testbox.yml*
### Note
# This functions uses --add-host="testbox.io:192.168.21.10"
# remove that for real world usage


mr.ansible-playbook(){
    if [[ $@ ]]; then
                : #Do nothing
    else
                clear
                echo -en "$COL_RED mr.ansible-playbook - help$COL_RESET"
                echo -en "Usage:""$COL_GREEN mr.ansible-playbook$COL_RESET""$COL_YELLOW NAME OF YML FILE$COL_RESET"
                echo -en ""
                echo -en "$COL_GREEN mr.ansible-playbook $COL_RESET""$COL_YELLOW testbox.yml$COL_RESET"
                kill -INT $$;
   fi

    docker run --rm -it --add-host="testbox.io:192.168.21.10" \
        -v $SSH_AUTH_SOCK:/tmp/ssh.sck -e SSH_AUTH_SOCK=/tmp/ssh.sck \
        -v ${PWD}/hosts:/etc/ansible/hosts \
        -v ${PWD}/ansible.cfg:/etc/ansible/ansible.cfg \
        -v ${PWD}/roles:/etc/ansible/roles \
        -v ${PWD}/plays:/etc/ansible/plays \
        --entrypoint=ansible-playbook an /etc/ansible/plays/$1
}

mr.ansible(){
	if [ "$1" = "update" ]; then
		echo "$COL_GREEN Pulling new image $COL_RESET"
		docker pull quay.io/tiramisu/mr.ansible
		kill -INT $$;
	else
		docker run --rm -it --add-host="testbox.io:192.168.21.10" \
			-v $SSH_AUTH_SOCK:/tmp/ssh.sck -e SSH_AUTH_SOCK=/tmp/ssh.sck \
			-v ${PWD}/hosts:/etc/ansible/hosts \
			-v ${PWD}/ansible.cfg:/etc/ansible/ansible.cfg mr.ansible "$@"
	fi
}

_mr.ansible(){
	local cur prev opts
        cur="${COMP_WORDS[COMP_CWORD]}"
        prev="${COMP_WORDS[COMP_CWORD-1]}"
        opts="mr.ansible mr.ansible-playbook update"

        COMPREPLY=( $(compgen -W "${opts}" -- "${cur}") )

}
complete -F _mr.ansible mr.ansible mr.ansible-playbook

